<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.msj.dao.ClaimVoucherDao">
    <resultMap id="claimVoucher" type="com.msj.entity.ClaimVoucher">
        <id property="id" column="id" javaType="java.lang.Integer"/>
        <result property="cause" column="cause" javaType="java.lang.String"/>
        <result property="createSn" column="create_sn" javaType="java.lang.String"/>
        <result property="createTime" column="create_time" javaType="java.util.Date"/>
        <result property="nextDealSn" column="next_deal_sn" javaType="java.lang.String"/>
        <result property="totalAmount" column="total_amount" javaType="java.lang.Double"/>
        <result property="status" column="status" javaType="java.lang.String"/>
        <association property="creater" column="create_sn" javaType="com.msj.entity.Employee">
            <result property="name" column="cname" javaType="java.lang.String"/>
        </association>
    </resultMap>
    <!--
        当主键是自增的情况下，添加一条记录的同时，其主键是不能使用的
        但是有时我们需要该主键，就应该设置useGeneratedKeys="true" keyProperty="id"
        useGeneratedKeys表示将当前主键值自动赋值给实体类ID
    -->
    <insert id="insertOne" useGeneratedKeys="true" keyProperty="id" parameterType="com.msj.entity.ClaimVoucher">
        insert into claim_voucher(cause,create_sn,create_time,next_deal_sn,total_amount,status)
        values(#{cause},#{createSn},#{createTime},#{nextDealSn},#{totalAmount},#{status})
    </insert>

    <select id="selectSelf" resultMap="claimVoucher">
        select c.*,e.name cname from claim_voucher c left join employee e
        on c.create_sn = e.sn
        where create_sn=#{createSn}
    </select>

    <select id="selectForDeal" resultMap="claimVoucher" parameterType="map">
        select c.*,e.name cname from claim_voucher c left join employee e
        on c.create_sn = e.sn
        where c.status in
        <foreach collection="statusList" item="s" open="(" close=")" separator="," >
            #{s}
        </foreach>
    </select>

    <!--<select id="selectclaimVoucher" resultMap="claimVoucher">-->
        <!--select c.*,e.name from claim_voucher c left join employee e-->
        <!--on c.create_sn = e.sn-->
        <!--where id=#{id}-->
    <!--</select>-->

    <update id="update" parameterType="com.msj.entity.ClaimVoucher">
        update claim_voucher set cause=#{cause},create_sn=#{createSn},
        next_deal_sn=#{nextDealSn},total_amount=#{totalAmount},status=#{status}
        where id=#{id}
    </update>

    <delete id="deleteById" parameterType="Integer">
        delete from claim_voucher where id = #{id}
    </delete>


    <select id="selectClaimVoucherStatus" parameterType="String" resultMap="claimVoucher">
        select c.*,e.name cname from claim_voucher c left join employee e
        on e.sn = c.create_sn
        where c.create_sn = #{createSn}
    </select>

    <select id="selectclaimVoucher" parameterType="int" resultMap="claimVoucher">
        select c.*,
        cv.item,cv.amount,cv.`comment`,
        e.name cname
        from claim_voucher c
        LEFT JOIN claim_voucher_item cv
        on c.id = cv.claim_voucher_id
        LEFT JOIN employee e
        on c.create_sn = e.sn
        where c.id = #{id}
    </select>

    <update id="updateStatus" parameterType="com.msj.entity.ClaimVoucher">
        update claim_voucher
        <set>
            <if test="status!=null">
                status = #{status},
            </if>
            <if test="nextDealSn!=null">
                next_deal_sn = #{nextDealSn}
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="selectCreateSnById" parameterType="com.msj.entity.ClaimVoucher" resultMap="claimVoucher">
        select create_sn from claim_voucher where id=#{id}
    </select>


</mapper>